{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT APPS\\\\showsapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ShowList from './components/ShowList';\nimport ShowDetails from './components/ShowDetails';\nimport ShowSummary from './components/ShowSummary';\nimport MovieBookingForm from './components/MovieBookingForm';\nimport ShowCard from './components/ShowCard';\nconst App = () => {\n  _s();\n  const [shows, setShows] = useState([]);\n  const [selectedShow, setSelectedShow] = useState(null);\n  useEffect(() => {\n    fetch('https://api.tvmaze.com/search/shows?q=all').then(response => response.json()).then(data => setShows(data)).catch(error => console.log(error));\n  }, []);\n  const handleShowClick = show => {\n    setSelectedShow(show);\n  };\n  const handleBackClick = () => {\n    setSelectedShow(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"TV Shows\"), selectedShow ? /*#__PURE__*/React.createElement(ShowDetails, {\n    show: selectedShow,\n    onBackClick: handleBackClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  })\n  // <ShowList show={selectedShow} onBackClick={handleBackClick} />,\n  // <ShowSummary showId={selectedShow} onBackClick={handleBackClick}  />,\n  //   <MovieBookingForm showId={selectedShow} onBackClick={handleBackClick} />\n  : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"show-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, shows.map(show => /*#__PURE__*/React.createElement(ShowCard, {\n    key: show.show.id,\n    show: show.show,\n    onClick: handleShowClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }))));\n};\n_s(App, \"JuG+ECnMnbbxonsdK4TfH8ZaZFw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","ShowList","ShowDetails","ShowSummary","MovieBookingForm","ShowCard","App","_s","shows","setShows","selectedShow","setSelectedShow","fetch","then","response","json","data","catch","error","console","log","handleShowClick","show","handleBackClick","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onBackClick","map","key","id","onClick","_c","$RefreshReg$"],"sources":["D:/REACT APPS/showsapp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ShowList from './components/ShowList';\nimport ShowDetails from './components/ShowDetails';\nimport ShowSummary from './components/ShowSummary';\nimport MovieBookingForm from './components/MovieBookingForm';\nimport ShowCard from './components/ShowCard';\n\n\nconst App = () => {\n  const [shows, setShows] = useState([]);\n  const [selectedShow, setSelectedShow] = useState(null);\n\n  useEffect(() => {\n    fetch('https://api.tvmaze.com/search/shows?q=all')\n      .then(response => response.json())\n      .then(data => setShows(data))\n      .catch(error => console.log(error));\n  }, []);\n\n  const handleShowClick = show => {\n    setSelectedShow(show);\n  };\n\n  const handleBackClick = () => {\n    setSelectedShow(null);\n  };\n\n  return (\n    <div className=\"container\">\n      <h2>TV Shows</h2>\n      {selectedShow ? (\n        <ShowDetails show={selectedShow} onBackClick={handleBackClick} />\n        // <ShowList show={selectedShow} onBackClick={handleBackClick} />,\n        // <ShowSummary showId={selectedShow} onBackClick={handleBackClick}  />,\n        //   <MovieBookingForm showId={selectedShow} onBackClick={handleBackClick} />\n      ) : (\n        <div className=\"show-list\">\n          {shows.map(show => (\n            <ShowCard key={show.show.id} show={show.show} onClick={handleShowClick} />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,gBAAgB,MAAM,+BAA+B;AAC5D,OAAOC,QAAQ,MAAM,uBAAuB;AAG5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,2CAA2C,CAAC,CAC/CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIP,QAAQ,CAACO,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAGC,IAAI,IAAI;IAC9BX,eAAe,CAACW,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BZ,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACEb,KAAA,CAAA0B,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxBjC,KAAA,CAAA0B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,UAAY,CAAC,EAChBrB,YAAY,gBACXZ,KAAA,CAAA0B,aAAA,CAACtB,WAAW;IAACoB,IAAI,EAAEZ,YAAa;IAACsB,WAAW,EAAET,eAAgB;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE;EAChE;EACA;EACA;EAAA,eAEAjC,KAAA,CAAA0B,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvBvB,KAAK,CAACyB,GAAG,CAACX,IAAI,iBACbxB,KAAA,CAAA0B,aAAA,CAACnB,QAAQ;IAAC6B,GAAG,EAAEZ,IAAI,CAACA,IAAI,CAACa,EAAG;IAACb,IAAI,EAAEA,IAAI,CAACA,IAAK;IAACc,OAAO,EAAEf,eAAgB;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC1E,CACE,CAEJ,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAsCT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}